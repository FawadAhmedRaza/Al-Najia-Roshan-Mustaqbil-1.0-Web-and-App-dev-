```markdown
# Al Najia Roshan Mustaqbil 1.0

## CSS Practice Work

### **Din 1: Typography Properties**
#### **Topics Covered:**
- `font-family`
- `font-size`
- `font-weight`
- `line-height`
- `letter-spacing`
- `text-align`
- `color`

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Typography Properties</title>
    <style>
        h1 {
            font-family: 'Arial, sans-serif';
            font-size: 36px;
            font-weight: bold;
            line-height: 1.5;
            color: #333;
        }
        p {
            font-family: 'Georgia, serif';
            font-size: 18px;
            letter-spacing: 0.05em;
            text-align: justify;
            color: #555;
        }
    </style>
</head>
<body>
    <h1>Typography in CSS</h1>
    <p>Typography ka matlab hai text ka style, arrangement, aur appearance. Achi typography readability aur user experience ko enhance karti hai.</p>
</body>
</html>
```

#### **Assignment:**
1. Ek webpage banao jisme heading, subheading, aur paragraph ho.
2. Har ek par different `font-family`, `font-size`, aur `font-weight` apply karo.
3. `text-align`, `letter-spacing`, aur `line-height` properties ko test karo.

---

### **Din 2: Display Properties**
#### **Topics Covered:**
- `display: block`
- `display: inline`
- `display: inline-block`
- `display: none`
- `visibility`

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Display Properties</title>
    <style>
        .box {
            width: 100px;
            height: 100px;
            background-color: lightblue;
            margin: 10px;
        }
        .block {
            display: block;
        }
        .inline {
            display: inline;
        }
        .inline-block {
            display: inline-block;
        }
    </style>
</head>
<body>
    <div class="box block">Block</div>
    <div class="box inline">Inline</div>
    <div class="box inline-block">Inline-Block</div>
</body>
</html>
```

#### **Assignment:**
1. Teen different boxes banao jisme `block`, `inline`, aur `inline-block` display properties use karo.
2. `visibility: hidden` aur `display: none` ko kisi element par apply karke test karo.

---

### **Din 3: Flexbox**
#### **Topics Covered:**
- `display: flex`
- `justify-content`
- `align-items`
- `flex-direction`

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flexbox Layout</title>
    <style>
        .container {
            display: flex;
            justify-content: space-around;
            align-items: center;
            height: 200px;
            background-color: lightgrey;
        }
        .box {
            width: 100px;
            height: 100px;
            background-color: #87CEFA;
            text-align: center;
            line-height: 100px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="box">1</div>
        <div class="box">2</div>
        <div class="box">3</div>
    </div>
</body>
</html>
```

#### **Assignment:**
1. Ek flex container banao jisme 3 boxes hon.
2. `justify-content` use karke boxes ko different tarikon se arrange karo (jaise `space-between`, `center`).
3. `flex-direction` ko `column` mein change karo aur layout mein changes dekho.

---

### **Din 4: Hover Effects**
#### **Topics Covered:**
- `:hover` pseudo-class
- Transition effects

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hover Effects</title>
    <style>
        .button {
            background-color: #4CAF50;
            padding: 10px 20px;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }
        .button:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <a href="#" class="button">Hover over me!</a>
</body>
</html>
```

#### **Assignment:**
1. Buttons banao jisme hover effects add karo jo background color ya thoda scale-up karein.
2. `transition` property ka use karke smooth transition add karo.
3. Hover effects images, text, ya div elements par apply karne ki koshish karo.

---

### **Din 5: Margin, Padding, aur Border**
#### **Topics Covered:**
- `margin`
- `padding`
- `border`

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Box Model</title>
    <style>
        .box {
            width: 200px;
            padding: 20px;
            margin: 20px;
            border: 2px solid #333;
            background-color: #f0f0f0;
        }
    </style>
</head>
<body>
    <div class="box">Box with Padding, Margin, and Border</div>
</body>
</html>
```

#### **Assignment:**
1. Ek box banao jisme specific padding, margin, aur border properties ho.
2. Multiple boxes banao jisme different padding, margin, aur border values ho taake spacing ko samajh sako.

---

### **Din 6: Color Formats (RGB, HEX, Alpha)**
#### **Topics Covered:**
- RGB Colors (`rgb()`)
- HEX Colors (`#RRGGBB`)
- RGBA for transparency (`rgba()`)

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Color Formats</title>
    <style>
        .color-box {
            width: 100px;
            height: 100px;
            margin: 10px;
            display: inline-block;
        }
        .rgb-box {
            background-color: rgb(255, 0, 0); /* Red */
        }
        .hex-box {
            background-color: #00FF00; /* Green */
        }
        .rgba-box {
            background-color: rgba(0, 0, 255, 0.5); /* Transparent Blue */
        }
    </style>
</head>
<body>
    <div class="color-box rgb-box"></div>
    <div class="color-box hex-box"></div>
    <div class="color-box rgba-box"></div>
</body>
</html>
```

#### **Assignment:**
1. Create 3 boxes with different colors using `rgb()`, `#HEX`, and `rgba()` formats.
2. Experiment with different alpha values in `rgba()` to observe the transparency effect.

---

### **Din 7: Text Shadow**
#### **Topics Covered:**
- `text-shadow`: offset, blur, and color

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Text Shadow</title>
    <style>
        h1 {
            font-family: Arial, sans-serif;
            font-size: 48px;
            color: #333;
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5); /* Offset X, Offset Y, Blur, Color */
        }
    </style>
</head>
<body>
    <h1>Stylish Text Shadow</h1>
</body>
</html>
```

#### **Assignment:**
1. Create a heading and apply a text shadow with different offsets and blur values.
2. Experiment with multiple shadows by separating them with commas (e.g., `2px 2px 5px #000, -1px -1px 3px #555`).

---

### **Din 8: Box Shadow**
#### **Topics Covered:**
- `box-shadow`: offset, blur, spread, and color

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <

meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Box Shadow</title>
    <style>
        .box {
            width: 200px;
            height: 200px;
            background-color: #87CEEB;
            margin: 20px;
            box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); /* Offset X, Offset Y, Blur, Spread, Color */
        }
    </style>
</head>
<body>
    <div class="box"></div>
</body>
</html>
```

#### **Assignment:**
1. Create a box with a shadow effect.
2. Adjust the shadow's spread and blur radius for different visual effects.
3. Experiment with multiple shadows and test inner shadows using `inset`.

---

### **Din 9: Background Images**
#### **Topics Covered:**
- `background-image`
- `background-size`, `background-position`, `background-repeat`

#### **Example:**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Background Images</title>
    <style>
        .hero {
            background-image: url('background.jpg');
            background-size: cover;
            background-position: center;
            height: 400px;
            color: white;
            text-align: center;
            padding: 100px 20px;
        }
    </style>
</head>
<body>
    <div class="hero">
        <h1>Welcome to My Website</h1>
        <p>Beautiful background image with text overlay.</p>
    </div>
</body>
</html>
```

#### **Assignment:**
1. Create a section with a background image and overlay text.
2. Use `background-size` properties like `contain`, `cover`, and `auto` to see the difference.
3. Test different `background-position` values to control image alignment.

---

### **Din 10: Final Project**
#### **Combine All Topics:**
1. Create a small webpage with:
   - A header with typography properties.
   - A flexbox-based navigation.
   - Cards with hover effects, shadows, and background images.
   - Proper use of padding, margin, and borders.
2. Make sure to use different color formats and test all the concepts you learned.

---

**Note:** Practice each concept thoroughly to build a solid understanding of CSS basics.
```

This Markdown covers the assignments from start to finish, including all example code and assignment instructions.
